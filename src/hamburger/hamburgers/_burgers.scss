/*https://github.com/TomoyaKuroda/CSS-Variables-Hamburgers*/
:root {
	--paddingX: 15px;
	--paddingY: 15px;
	--icone-layerWidth: 40px;
	--icone-layerHeight: 4px;
	--icone-layerSpacing: 6px;
	--icone-burger-color: #000;
	--icone-borderRadiusSize: 4px;
	--hamburger-hover-opacity: 0.7;
	--hamburger-active-layer-color: var(--icone-burger-color);
	--hamburger-active-hover-opacity: var(--hamburger-hover-opacity);
}

.hamburger {
	padding: var(--paddingY) var(--paddingX);
	display: inline-block;
	cursor: pointer;

	transition-property: opacity, filter;
	transition-duration: 0.15s;
	transition-timing-function: linear;

	font: inherit;
	color: inherit;
	text-transform: none;
	background-color: transparent;
	border: 0;
	margin: 0;
	overflow: visible;

	&:hover {
		opacity: var(--hamburger-hover-opacity);
	}

	&.is-active {
		&:hover {
			opacity: var(--hamburger-active-hover-opacity);
		}

		.hamburger-inner,
		.hamburger-inner::before,
		.hamburger-inner::after {
			background-color: var(--hamburger-active-layer-color);
		}
	}
}

.hamburger-box {
	width: var(--icone-layerWidth);
	height: calc(var(--icone-layerHeight) * 3 + var(--icone-layerSpacing) * 2);
	display: block;
	position: relative;
	// vertical-align: middle;
}

.hamburger-inner {
	display: block;
	top: 50%;
	margin-top: calc(var(--icone-layerHeight) / -2);

	&,
	&::before,
	&::after {
		width: var(--icone-layerWidth);
		height: var(--icone-layerHeight);
		background-color: var(--icone-burger-color);
		border-radius: var(--icone-borderRadiusSize);
		position: absolute;
		transition-property: transform;
		transition-duration: 0.15s;
		transition-timing-function: ease;
	}

	&::before,
	&::after {
		content: "";
		display: block;
	}

	&::before {
		top: calc((var(--icone-layerSpacing) + var(--icone-layerHeight)) * -1);
	}

	&::after {
		bottom: calc((var(--icone-layerSpacing) + var(--icone-layerHeight)) * -1);
	}
}

.hamburger--slider {
	.hamburger-inner {
		top: calc((var(--icone-layerHeight) / 2));

		&::before {
			top: calc(var(--icone-layerHeight) + var(--icone-layerSpacing));
			transition-property: transform, opacity;
			transition-timing-function: ease;
			transition-duration: 0.15s;
		}

		&::after {
			top: calc(
				(var(--icone-layerHeight) * 2) + (var(--icone-layerSpacing) * 2)
			);
		}
	}

	&.is-active {
		.hamburger-inner {
			background-color: var(--icone-burger-color);

			--y-offset: calc(var(--icone-layerSpacing) + var(--icone-layerHeight));

			transform: translate3d(0, var(--y-offset), 0) rotate(45deg);

			&::before {
				transform: rotate(-45deg)
					translate3d(
						calc((var(--icone-layerWidth) / -7)),
						calc(var(--icone-layerSpacing) * -1),
						0
					);
				opacity: 0;
				background-color: var(--icone-burger-color);
			}

			&::after {
				transform: translate3d(0, calc(var(--y-offset) * -2), 0) rotate(-90deg);
				background-color: var(--icone-burger-color);
			}
		}
	}
}
